var searchIndex = {};
searchIndex['evdev'] = {"items":[[0,"","evdev","Linux event device handling.",null,null],[3,"Types","","/// Event types supported by the device.",null,null],[3,"Props","","/// Device properties.",null,null],[3,"RelativeAxis","","",null,null],[3,"AbsoluteAxis","","",null,null],[3,"Switch","","",null,null],[3,"Led","","/// LEDs specified by USB HID.",null,null],[3,"Misc","","/// Various miscellaneous event types. Current as of kernel 4.1.",null,null],[3,"FFStatus","","",null,null],[3,"Repeat","","",null,null],[3,"Sound","","",null,null],[3,"DeviceState","","",null,null],[12,"timestamp","","The state corresponds to kernel state at this timestamp.",0,null],[12,"key_vals","","Set = key pressed",0,null],[12,"abs_vals","","",0,null],[12,"switch_vals","","Set = switch enabled (closed)",0,null],[12,"led_vals","","Set = LED lit",0,null],[3,"Device","","",null,null],[3,"Events","","",null,null],[3,"RawEvents","","",null,null],[4,"Error","","",null,null],[13,"NulError","","",1,null],[13,"LibcError","","",1,null],[13,"IoctlError","","",1,null],[4,"Key","","Scancodes for key presses.",null,null],[13,"KEY_RESERVED","","",2,null],[13,"KEY_ESC","","",2,null],[13,"KEY_1","","",2,null],[13,"KEY_2","","",2,null],[13,"KEY_3","","",2,null],[13,"KEY_4","","",2,null],[13,"KEY_5","","",2,null],[13,"KEY_6","","",2,null],[13,"KEY_7","","",2,null],[13,"KEY_8","","",2,null],[13,"KEY_9","","",2,null],[13,"KEY_0","","",2,null],[13,"KEY_MINUS","","",2,null],[13,"KEY_EQUAL","","",2,null],[13,"KEY_BACKSPACE","","",2,null],[13,"KEY_TAB","","",2,null],[13,"KEY_Q","","",2,null],[13,"KEY_W","","",2,null],[13,"KEY_E","","",2,null],[13,"KEY_R","","",2,null],[13,"KEY_T","","",2,null],[13,"KEY_Y","","",2,null],[13,"KEY_U","","",2,null],[13,"KEY_I","","",2,null],[13,"KEY_O","","",2,null],[13,"KEY_P","","",2,null],[13,"KEY_LEFTBRACE","","",2,null],[13,"KEY_RIGHTBRACE","","",2,null],[13,"KEY_ENTER","","",2,null],[13,"KEY_LEFTCTRL","","",2,null],[13,"KEY_A","","",2,null],[13,"KEY_S","","",2,null],[13,"KEY_D","","",2,null],[13,"KEY_F","","",2,null],[13,"KEY_G","","",2,null],[13,"KEY_H","","",2,null],[13,"KEY_J","","",2,null],[13,"KEY_K","","",2,null],[13,"KEY_L","","",2,null],[13,"KEY_SEMICOLON","","",2,null],[13,"KEY_APOSTROPHE","","",2,null],[13,"KEY_GRAVE","","",2,null],[13,"KEY_LEFTSHIFT","","",2,null],[13,"KEY_BACKSLASH","","",2,null],[13,"KEY_Z","","",2,null],[13,"KEY_X","","",2,null],[13,"KEY_C","","",2,null],[13,"KEY_V","","",2,null],[13,"KEY_B","","",2,null],[13,"KEY_N","","",2,null],[13,"KEY_M","","",2,null],[13,"KEY_COMMA","","",2,null],[13,"KEY_DOT","","",2,null],[13,"KEY_SLASH","","",2,null],[13,"KEY_RIGHTSHIFT","","",2,null],[13,"KEY_KPASTERISK","","",2,null],[13,"KEY_LEFTALT","","",2,null],[13,"KEY_SPACE","","",2,null],[13,"KEY_CAPSLOCK","","",2,null],[13,"KEY_F1","","",2,null],[13,"KEY_F2","","",2,null],[13,"KEY_F3","","",2,null],[13,"KEY_F4","","",2,null],[13,"KEY_F5","","",2,null],[13,"KEY_F6","","",2,null],[13,"KEY_F7","","",2,null],[13,"KEY_F8","","",2,null],[13,"KEY_F9","","",2,null],[13,"KEY_F10","","",2,null],[13,"KEY_NUMLOCK","","",2,null],[13,"KEY_SCROLLLOCK","","",2,null],[13,"KEY_KP7","","",2,null],[13,"KEY_KP8","","",2,null],[13,"KEY_KP9","","",2,null],[13,"KEY_KPMINUS","","",2,null],[13,"KEY_KP4","","",2,null],[13,"KEY_KP5","","",2,null],[13,"KEY_KP6","","",2,null],[13,"KEY_KPPLUS","","",2,null],[13,"KEY_KP1","","",2,null],[13,"KEY_KP2","","",2,null],[13,"KEY_KP3","","",2,null],[13,"KEY_KP0","","",2,null],[13,"KEY_KPDOT","","",2,null],[13,"KEY_ZENKAKUHANKAKU","","",2,null],[13,"KEY_102ND","","",2,null],[13,"KEY_F11","","",2,null],[13,"KEY_F12","","",2,null],[13,"KEY_RO","","",2,null],[13,"KEY_KATAKANA","","",2,null],[13,"KEY_HIRAGANA","","",2,null],[13,"KEY_HENKAN","","",2,null],[13,"KEY_KATAKANAHIRAGANA","","",2,null],[13,"KEY_MUHENKAN","","",2,null],[13,"KEY_KPJPCOMMA","","",2,null],[13,"KEY_KPENTER","","",2,null],[13,"KEY_RIGHTCTRL","","",2,null],[13,"KEY_KPSLASH","","",2,null],[13,"KEY_SYSRQ","","",2,null],[13,"KEY_RIGHTALT","","",2,null],[13,"KEY_LINEFEED","","",2,null],[13,"KEY_HOME","","",2,null],[13,"KEY_UP","","",2,null],[13,"KEY_PAGEUP","","",2,null],[13,"KEY_LEFT","","",2,null],[13,"KEY_RIGHT","","",2,null],[13,"KEY_END","","",2,null],[13,"KEY_DOWN","","",2,null],[13,"KEY_PAGEDOWN","","",2,null],[13,"KEY_INSERT","","",2,null],[13,"KEY_DELETE","","",2,null],[13,"KEY_MACRO","","",2,null],[13,"KEY_MUTE","","",2,null],[13,"KEY_VOLUMEDOWN","","",2,null],[13,"KEY_VOLUMEUP","","",2,null],[13,"KEY_POWER","","",2,null],[13,"KEY_KPEQUAL","","",2,null],[13,"KEY_KPPLUSMINUS","","",2,null],[13,"KEY_PAUSE","","",2,null],[13,"KEY_SCALE","","",2,null],[13,"KEY_KPCOMMA","","",2,null],[13,"KEY_HANGEUL","","",2,null],[13,"KEY_HANJA","","",2,null],[13,"KEY_YEN","","",2,null],[13,"KEY_LEFTMETA","","",2,null],[13,"KEY_RIGHTMETA","","",2,null],[13,"KEY_COMPOSE","","",2,null],[13,"KEY_STOP","","",2,null],[13,"KEY_AGAIN","","",2,null],[13,"KEY_PROPS","","",2,null],[13,"KEY_UNDO","","",2,null],[13,"KEY_FRONT","","",2,null],[13,"KEY_COPY","","",2,null],[13,"KEY_OPEN","","",2,null],[13,"KEY_PASTE","","",2,null],[13,"KEY_FIND","","",2,null],[13,"KEY_CUT","","",2,null],[13,"KEY_HELP","","",2,null],[13,"KEY_MENU","","",2,null],[13,"KEY_CALC","","",2,null],[13,"KEY_SETUP","","",2,null],[13,"KEY_SLEEP","","",2,null],[13,"KEY_WAKEUP","","",2,null],[13,"KEY_FILE","","",2,null],[13,"KEY_SENDFILE","","",2,null],[13,"KEY_DELETEFILE","","",2,null],[13,"KEY_XFER","","",2,null],[13,"KEY_PROG1","","",2,null],[13,"KEY_PROG2","","",2,null],[13,"KEY_WWW","","",2,null],[13,"KEY_MSDOS","","",2,null],[13,"KEY_COFFEE","","",2,null],[13,"KEY_DIRECTION","","",2,null],[13,"KEY_CYCLEWINDOWS","","",2,null],[13,"KEY_MAIL","","",2,null],[13,"KEY_BOOKMARKS","","",2,null],[13,"KEY_COMPUTER","","",2,null],[13,"KEY_BACK","","",2,null],[13,"KEY_FORWARD","","",2,null],[13,"KEY_CLOSECD","","",2,null],[13,"KEY_EJECTCD","","",2,null],[13,"KEY_EJECTCLOSECD","","",2,null],[13,"KEY_NEXTSONG","","",2,null],[13,"KEY_PLAYPAUSE","","",2,null],[13,"KEY_PREVIOUSSONG","","",2,null],[13,"KEY_STOPCD","","",2,null],[13,"KEY_RECORD","","",2,null],[13,"KEY_REWIND","","",2,null],[13,"KEY_PHONE","","",2,null],[13,"KEY_ISO","","",2,null],[13,"KEY_CONFIG","","",2,null],[13,"KEY_HOMEPAGE","","",2,null],[13,"KEY_REFRESH","","",2,null],[13,"KEY_EXIT","","",2,null],[13,"KEY_MOVE","","",2,null],[13,"KEY_EDIT","","",2,null],[13,"KEY_SCROLLUP","","",2,null],[13,"KEY_SCROLLDOWN","","",2,null],[13,"KEY_KPLEFTPAREN","","",2,null],[13,"KEY_KPRIGHTPAREN","","",2,null],[13,"KEY_NEW","","",2,null],[13,"KEY_REDO","","",2,null],[13,"KEY_F13","","",2,null],[13,"KEY_F14","","",2,null],[13,"KEY_F15","","",2,null],[13,"KEY_F16","","",2,null],[13,"KEY_F17","","",2,null],[13,"KEY_F18","","",2,null],[13,"KEY_F19","","",2,null],[13,"KEY_F20","","",2,null],[13,"KEY_F21","","",2,null],[13,"KEY_F22","","",2,null],[13,"KEY_F23","","",2,null],[13,"KEY_F24","","",2,null],[13,"KEY_PLAYCD","","",2,null],[13,"KEY_PAUSECD","","",2,null],[13,"KEY_PROG3","","",2,null],[13,"KEY_PROG4","","",2,null],[13,"KEY_DASHBOARD","","",2,null],[13,"KEY_SUSPEND","","",2,null],[13,"KEY_CLOSE","","",2,null],[13,"KEY_PLAY","","",2,null],[13,"KEY_FASTFORWARD","","",2,null],[13,"KEY_BASSBOOST","","",2,null],[13,"KEY_PRINT","","",2,null],[13,"KEY_HP","","",2,null],[13,"KEY_CAMERA","","",2,null],[13,"KEY_SOUND","","",2,null],[13,"KEY_QUESTION","","",2,null],[13,"KEY_EMAIL","","",2,null],[13,"KEY_CHAT","","",2,null],[13,"KEY_SEARCH","","",2,null],[13,"KEY_CONNECT","","",2,null],[13,"KEY_FINANCE","","",2,null],[13,"KEY_SPORT","","",2,null],[13,"KEY_SHOP","","",2,null],[13,"KEY_ALTERASE","","",2,null],[13,"KEY_CANCEL","","",2,null],[13,"KEY_BRIGHTNESSDOWN","","",2,null],[13,"KEY_BRIGHTNESSUP","","",2,null],[13,"KEY_MEDIA","","",2,null],[13,"KEY_SWITCHVIDEOMODE","","",2,null],[13,"KEY_KBDILLUMTOGGLE","","",2,null],[13,"KEY_KBDILLUMDOWN","","",2,null],[13,"KEY_KBDILLUMUP","","",2,null],[13,"KEY_SEND","","",2,null],[13,"KEY_REPLY","","",2,null],[13,"KEY_FORWARDMAIL","","",2,null],[13,"KEY_SAVE","","",2,null],[13,"KEY_DOCUMENTS","","",2,null],[13,"KEY_BATTERY","","",2,null],[13,"KEY_BLUETOOTH","","",2,null],[13,"KEY_WLAN","","",2,null],[13,"KEY_UWB","","",2,null],[13,"KEY_UNKNOWN","","",2,null],[13,"KEY_VIDEO_NEXT","","",2,null],[13,"KEY_VIDEO_PREV","","",2,null],[13,"KEY_BRIGHTNESS_CYCLE","","",2,null],[13,"KEY_BRIGHTNESS_AUTO","","",2,null],[13,"KEY_DISPLAY_OFF","","",2,null],[13,"KEY_WWAN","","",2,null],[13,"KEY_RFKILL","","",2,null],[13,"KEY_MICMUTE","","",2,null],[13,"BTN_0","","",2,null],[13,"BTN_1","","",2,null],[13,"BTN_2","","",2,null],[13,"BTN_3","","",2,null],[13,"BTN_4","","",2,null],[13,"BTN_5","","",2,null],[13,"BTN_6","","",2,null],[13,"BTN_7","","",2,null],[13,"BTN_8","","",2,null],[13,"BTN_9","","",2,null],[13,"BTN_LEFT","","",2,null],[13,"BTN_RIGHT","","",2,null],[13,"BTN_MIDDLE","","",2,null],[13,"BTN_SIDE","","",2,null],[13,"BTN_EXTRA","","",2,null],[13,"BTN_FORWARD","","",2,null],[13,"BTN_BACK","","",2,null],[13,"BTN_TASK","","",2,null],[13,"BTN_TRIGGER","","",2,null],[13,"BTN_THUMB","","",2,null],[13,"BTN_THUMB2","","",2,null],[13,"BTN_TOP","","",2,null],[13,"BTN_TOP2","","",2,null],[13,"BTN_PINKIE","","",2,null],[13,"BTN_BASE","","",2,null],[13,"BTN_BASE2","","",2,null],[13,"BTN_BASE3","","",2,null],[13,"BTN_BASE4","","",2,null],[13,"BTN_BASE5","","",2,null],[13,"BTN_BASE6","","",2,null],[13,"BTN_DEAD","","",2,null],[13,"BTN_SOUTH","","",2,null],[13,"BTN_EAST","","",2,null],[13,"BTN_C","","",2,null],[13,"BTN_NORTH","","",2,null],[13,"BTN_WEST","","",2,null],[13,"BTN_Z","","",2,null],[13,"BTN_TL","","",2,null],[13,"BTN_TR","","",2,null],[13,"BTN_TL2","","",2,null],[13,"BTN_TR2","","",2,null],[13,"BTN_SELECT","","",2,null],[13,"BTN_START","","",2,null],[13,"BTN_MODE","","",2,null],[13,"BTN_THUMBL","","",2,null],[13,"BTN_THUMBR","","",2,null],[13,"BTN_TOOL_PEN","","",2,null],[13,"BTN_TOOL_RUBBER","","",2,null],[13,"BTN_TOOL_BRUSH","","",2,null],[13,"BTN_TOOL_PENCIL","","",2,null],[13,"BTN_TOOL_AIRBRUSH","","",2,null],[13,"BTN_TOOL_FINGER","","",2,null],[13,"BTN_TOOL_MOUSE","","",2,null],[13,"BTN_TOOL_LENS","","",2,null],[13,"BTN_TOOL_QUINTTAP","","",2,null],[13,"BTN_TOUCH","","",2,null],[13,"BTN_STYLUS","","",2,null],[13,"BTN_STYLUS2","","",2,null],[13,"BTN_TOOL_DOUBLETAP","","",2,null],[13,"BTN_TOOL_TRIPLETAP","","",2,null],[13,"BTN_TOOL_QUADTAP","","",2,null],[13,"BTN_GEAR_DOWN","","",2,null],[13,"BTN_GEAR_UP","","",2,null],[13,"KEY_OK","","",2,null],[13,"KEY_SELECT","","",2,null],[13,"KEY_GOTO","","",2,null],[13,"KEY_CLEAR","","",2,null],[13,"KEY_POWER2","","",2,null],[13,"KEY_OPTION","","",2,null],[13,"KEY_INFO","","",2,null],[13,"KEY_TIME","","",2,null],[13,"KEY_VENDOR","","",2,null],[13,"KEY_ARCHIVE","","",2,null],[13,"KEY_PROGRAM","","",2,null],[13,"KEY_CHANNEL","","",2,null],[13,"KEY_FAVORITES","","",2,null],[13,"KEY_EPG","","",2,null],[13,"KEY_PVR","","",2,null],[13,"KEY_MHP","","",2,null],[13,"KEY_LANGUAGE","","",2,null],[13,"KEY_TITLE","","",2,null],[13,"KEY_SUBTITLE","","",2,null],[13,"KEY_ANGLE","","",2,null],[13,"KEY_ZOOM","","",2,null],[13,"KEY_MODE","","",2,null],[13,"KEY_KEYBOARD","","",2,null],[13,"KEY_SCREEN","","",2,null],[13,"KEY_PC","","",2,null],[13,"KEY_TV","","",2,null],[13,"KEY_TV2","","",2,null],[13,"KEY_VCR","","",2,null],[13,"KEY_VCR2","","",2,null],[13,"KEY_SAT","","",2,null],[13,"KEY_SAT2","","",2,null],[13,"KEY_CD","","",2,null],[13,"KEY_TAPE","","",2,null],[13,"KEY_RADIO","","",2,null],[13,"KEY_TUNER","","",2,null],[13,"KEY_PLAYER","","",2,null],[13,"KEY_TEXT","","",2,null],[13,"KEY_DVD","","",2,null],[13,"KEY_AUX","","",2,null],[13,"KEY_MP3","","",2,null],[13,"KEY_AUDIO","","",2,null],[13,"KEY_VIDEO","","",2,null],[13,"KEY_DIRECTORY","","",2,null],[13,"KEY_LIST","","",2,null],[13,"KEY_MEMO","","",2,null],[13,"KEY_CALENDAR","","",2,null],[13,"KEY_RED","","",2,null],[13,"KEY_GREEN","","",2,null],[13,"KEY_YELLOW","","",2,null],[13,"KEY_BLUE","","",2,null],[13,"KEY_CHANNELUP","","",2,null],[13,"KEY_CHANNELDOWN","","",2,null],[13,"KEY_FIRST","","",2,null],[13,"KEY_LAST","","",2,null],[13,"KEY_AB","","",2,null],[13,"KEY_NEXT","","",2,null],[13,"KEY_RESTART","","",2,null],[13,"KEY_SLOW","","",2,null],[13,"KEY_SHUFFLE","","",2,null],[13,"KEY_BREAK","","",2,null],[13,"KEY_PREVIOUS","","",2,null],[13,"KEY_DIGITS","","",2,null],[13,"KEY_TEEN","","",2,null],[13,"KEY_TWEN","","",2,null],[13,"KEY_VIDEOPHONE","","",2,null],[13,"KEY_GAMES","","",2,null],[13,"KEY_ZOOMIN","","",2,null],[13,"KEY_ZOOMOUT","","",2,null],[13,"KEY_ZOOMRESET","","",2,null],[13,"KEY_WORDPROCESSOR","","",2,null],[13,"KEY_EDITOR","","",2,null],[13,"KEY_SPREADSHEET","","",2,null],[13,"KEY_GRAPHICSEDITOR","","",2,null],[13,"KEY_PRESENTATION","","",2,null],[13,"KEY_DATABASE","","",2,null],[13,"KEY_NEWS","","",2,null],[13,"KEY_VOICEMAIL","","",2,null],[13,"KEY_ADDRESSBOOK","","",2,null],[13,"KEY_MESSENGER","","",2,null],[13,"KEY_DISPLAYTOGGLE","","",2,null],[13,"KEY_SPELLCHECK","","",2,null],[13,"KEY_LOGOFF","","",2,null],[13,"KEY_DOLLAR","","",2,null],[13,"KEY_EURO","","",2,null],[13,"KEY_FRAMEBACK","","",2,null],[13,"KEY_FRAMEFORWARD","","",2,null],[13,"KEY_CONTEXT_MENU","","",2,null],[13,"KEY_MEDIA_REPEAT","","",2,null],[13,"KEY_10CHANNELSUP","","",2,null],[13,"KEY_10CHANNELSDOWN","","",2,null],[13,"KEY_IMAGES","","",2,null],[13,"KEY_DEL_EOL","","",2,null],[13,"KEY_DEL_EOS","","",2,null],[13,"KEY_INS_LINE","","",2,null],[13,"KEY_DEL_LINE","","",2,null],[13,"KEY_FN","","",2,null],[13,"KEY_FN_ESC","","",2,null],[13,"KEY_FN_F1","","",2,null],[13,"KEY_FN_F2","","",2,null],[13,"KEY_FN_F3","","",2,null],[13,"KEY_FN_F4","","",2,null],[13,"KEY_FN_F5","","",2,null],[13,"KEY_FN_F6","","",2,null],[13,"KEY_FN_F7","","",2,null],[13,"KEY_FN_F8","","",2,null],[13,"KEY_FN_F9","","",2,null],[13,"KEY_FN_F10","","",2,null],[13,"KEY_FN_F11","","",2,null],[13,"KEY_FN_F12","","",2,null],[13,"KEY_FN_1","","",2,null],[13,"KEY_FN_2","","",2,null],[13,"KEY_FN_D","","",2,null],[13,"KEY_FN_E","","",2,null],[13,"KEY_FN_F","","",2,null],[13,"KEY_FN_S","","",2,null],[13,"KEY_FN_B","","",2,null],[13,"KEY_BRL_DOT1","","",2,null],[13,"KEY_BRL_DOT2","","",2,null],[13,"KEY_BRL_DOT3","","",2,null],[13,"KEY_BRL_DOT4","","",2,null],[13,"KEY_BRL_DOT5","","",2,null],[13,"KEY_BRL_DOT6","","",2,null],[13,"KEY_BRL_DOT7","","",2,null],[13,"KEY_BRL_DOT8","","",2,null],[13,"KEY_BRL_DOT9","","",2,null],[13,"KEY_BRL_DOT10","","",2,null],[13,"KEY_NUMERIC_0","","",2,null],[13,"KEY_NUMERIC_1","","",2,null],[13,"KEY_NUMERIC_2","","",2,null],[13,"KEY_NUMERIC_3","","",2,null],[13,"KEY_NUMERIC_4","","",2,null],[13,"KEY_NUMERIC_5","","",2,null],[13,"KEY_NUMERIC_6","","",2,null],[13,"KEY_NUMERIC_7","","",2,null],[13,"KEY_NUMERIC_8","","",2,null],[13,"KEY_NUMERIC_9","","",2,null],[13,"KEY_NUMERIC_STAR","","",2,null],[13,"KEY_NUMERIC_POUND","","",2,null],[13,"KEY_CAMERA_FOCUS","","",2,null],[13,"KEY_WPS_BUTTON","","",2,null],[13,"KEY_TOUCHPAD_TOGGLE","","",2,null],[13,"KEY_TOUCHPAD_ON","","",2,null],[13,"KEY_TOUCHPAD_OFF","","",2,null],[13,"KEY_CAMERA_ZOOMIN","","",2,null],[13,"KEY_CAMERA_ZOOMOUT","","",2,null],[13,"KEY_CAMERA_UP","","",2,null],[13,"KEY_CAMERA_DOWN","","",2,null],[13,"KEY_CAMERA_LEFT","","",2,null],[13,"KEY_CAMERA_RIGHT","","",2,null],[13,"KEY_ATTENDANT_ON","","",2,null],[13,"KEY_ATTENDANT_OFF","","",2,null],[13,"KEY_ATTENDANT_TOGGLE","","",2,null],[13,"KEY_LIGHTS_TOGGLE","","",2,null],[13,"BTN_DPAD_UP","","",2,null],[13,"BTN_DPAD_DOWN","","",2,null],[13,"BTN_DPAD_LEFT","","",2,null],[13,"BTN_DPAD_RIGHT","","",2,null],[13,"KEY_ALS_TOGGLE","","",2,null],[13,"KEY_BUTTONCONFIG","","",2,null],[13,"KEY_TASKMANAGER","","",2,null],[13,"KEY_JOURNAL","","",2,null],[13,"KEY_CONTROLPANEL","","",2,null],[13,"KEY_APPSELECT","","",2,null],[13,"KEY_SCREENSAVER","","",2,null],[13,"KEY_VOICECOMMAND","","",2,null],[13,"KEY_BRIGHTNESS_MIN","","",2,null],[13,"KEY_BRIGHTNESS_MAX","","",2,null],[13,"KEY_KBDINPUTASSIST_PREV","","",2,null],[13,"KEY_KBDINPUTASSIST_NEXT","","",2,null],[13,"KEY_KBDINPUTASSIST_PREVGROUP","","",2,null],[13,"KEY_KBDINPUTASSIST_NEXTGROUP","","",2,null],[13,"KEY_KBDINPUTASSIST_ACCEPT","","",2,null],[13,"KEY_KBDINPUTASSIST_CANCEL","","",2,null],[13,"BTN_TRIGGER_HAPPY1","","",2,null],[13,"BTN_TRIGGER_HAPPY2","","",2,null],[13,"BTN_TRIGGER_HAPPY3","","",2,null],[13,"BTN_TRIGGER_HAPPY4","","",2,null],[13,"BTN_TRIGGER_HAPPY5","","",2,null],[13,"BTN_TRIGGER_HAPPY6","","",2,null],[13,"BTN_TRIGGER_HAPPY7","","",2,null],[13,"BTN_TRIGGER_HAPPY8","","",2,null],[13,"BTN_TRIGGER_HAPPY9","","",2,null],[13,"BTN_TRIGGER_HAPPY10","","",2,null],[13,"BTN_TRIGGER_HAPPY11","","",2,null],[13,"BTN_TRIGGER_HAPPY12","","",2,null],[13,"BTN_TRIGGER_HAPPY13","","",2,null],[13,"BTN_TRIGGER_HAPPY14","","",2,null],[13,"BTN_TRIGGER_HAPPY15","","",2,null],[13,"BTN_TRIGGER_HAPPY16","","",2,null],[13,"BTN_TRIGGER_HAPPY17","","",2,null],[13,"BTN_TRIGGER_HAPPY18","","",2,null],[13,"BTN_TRIGGER_HAPPY19","","",2,null],[13,"BTN_TRIGGER_HAPPY20","","",2,null],[13,"BTN_TRIGGER_HAPPY21","","",2,null],[13,"BTN_TRIGGER_HAPPY22","","",2,null],[13,"BTN_TRIGGER_HAPPY23","","",2,null],[13,"BTN_TRIGGER_HAPPY24","","",2,null],[13,"BTN_TRIGGER_HAPPY25","","",2,null],[13,"BTN_TRIGGER_HAPPY26","","",2,null],[13,"BTN_TRIGGER_HAPPY27","","",2,null],[13,"BTN_TRIGGER_HAPPY28","","",2,null],[13,"BTN_TRIGGER_HAPPY29","","",2,null],[13,"BTN_TRIGGER_HAPPY30","","",2,null],[13,"BTN_TRIGGER_HAPPY31","","",2,null],[13,"BTN_TRIGGER_HAPPY32","","",2,null],[13,"BTN_TRIGGER_HAPPY33","","",2,null],[13,"BTN_TRIGGER_HAPPY34","","",2,null],[13,"BTN_TRIGGER_HAPPY35","","",2,null],[13,"BTN_TRIGGER_HAPPY36","","",2,null],[13,"BTN_TRIGGER_HAPPY37","","",2,null],[13,"BTN_TRIGGER_HAPPY38","","",2,null],[13,"BTN_TRIGGER_HAPPY39","","",2,null],[13,"BTN_TRIGGER_HAPPY40","","",2,null],[13,"KEY_MAX","","",2,null],[4,"FFEffect","","",null,null],[13,"FF_RUMBLE","","",3,null],[13,"FF_PERIODIC","","",3,null],[13,"FF_CONSTANT","","",3,null],[13,"FF_SPRING","","",3,null],[13,"FF_FRICTION","","",3,null],[13,"FF_DAMPER","","",3,null],[13,"FF_INERTIA","","",3,null],[13,"FF_RAMP","","",3,null],[13,"FF_SQUARE","","",3,null],[13,"FF_TRIANGLE","","",3,null],[13,"FF_SINE","","",3,null],[13,"FF_SAW_UP","","",3,null],[13,"FF_SAW_DOWN","","",3,null],[13,"FF_CUSTOM","","",3,null],[13,"FF_GAIN","","",3,null],[13,"FF_AUTOCENTER","","",3,null],[13,"FF_MAX","","",3,null],[4,"Synchronization","","",null,null],[13,"SYN_REPORT","","Terminates a packet of events from the device.",4,null],[13,"SYN_CONFIG","","Appears to be unused.",4,null],[13,"SYN_MT_REPORT","","\"Used to synchronize and separate touch events\"",4,null],[13,"SYN_DROPPED","","Ring buffer filled, events were dropped.",4,null],[13,"SYN_MAX","","",4,null],[5,"enumerate","","Crawls `/dev/input` for evdev devices.",null,{"inputs":[],"output":{"name":"vec"}}],[17,"SYNCHRONIZATION","","/// A bookkeeping event. Usually not important to applications.",null,null],[17,"KEY","","/// A key changed state. A key, or button, is usually a momentary switch (in the circuit sense). It has two\n/// states: down, or up. There are events for when keys are pressed (become down) and\n/// released (become up). There are also \"key repeats\", where multiple events are sent\n/// while a key is down.",null,null],[17,"RELATIVE","","/// Movement on a relative axis. There is no absolute coordinate frame, just the fact that\n/// there was a change of a certain amount of units. Used for things like mouse movement or\n/// scroll wheels.",null,null],[17,"ABSOLUTE","","/// Movement on an absolute axis. Used for things such as touch events and joysticks.",null,null],[17,"MISC","","/// Miscellaneous events that don't fall into other categories. I'm not quite sure when\n/// these happen or what they correspond to.",null,null],[17,"SWITCH","","/// Change in a switch value. Switches are boolean conditions and usually correspond to a\n/// toggle switch of some kind in hardware.",null,null],[17,"LED","","/// An LED was toggled.",null,null],[17,"SOUND","","/// A sound was made.",null,null],[17,"REPEAT","","/// There are no events of this type, to my knowledge, but represents metadata about key\n/// repeat configuration.",null,null],[17,"FORCEFEEDBACK","","/// I believe there are no events of this type, but rather this is used to represent that\n/// the device can create haptic effects.",null,null],[17,"POWER","","/// I think this is unused?",null,null],[17,"FORCEFEEDBACKSTATUS","","/// A force feedback effect's state changed.",null,null],[17,"POINTER","","/// This input device needs a pointer (\"cursor\") for the user to know its state.",null,null],[17,"DIRECT","","/// \"direct input devices\", according to the header.",null,null],[17,"BUTTONPAD","","/// \"has button(s) under pad\", according to the header.",null,null],[17,"SEMI_MT","","/// Touch rectangle only (I think this means that if there are multiple touches, then the\n/// bounding rectangle of all the touches is returned, not each touch).",null,null],[17,"TOPBUTTONPAD","","/// \"softbuttons at top of pad\", according to the header.",null,null],[17,"POINTING_STICK","","/// Is a pointing stick (\"clit mouse\" etc, https://xkcd.com/243/)",null,null],[17,"ACCELEROMETER","","/// Has an accelerometer. Probably reports relative events in that case?",null,null],[17,"REL_X","","",null,null],[17,"REL_Y","","",null,null],[17,"REL_Z","","",null,null],[17,"REL_RX","","",null,null],[17,"REL_RY","","",null,null],[17,"REL_RZ","","",null,null],[17,"REL_HWHEEL","","",null,null],[17,"REL_DIAL","","",null,null],[17,"REL_WHEEL","","",null,null],[17,"REL_MISC","","",null,null],[17,"ABS_X","","",null,null],[17,"ABS_Y","","",null,null],[17,"ABS_Z","","",null,null],[17,"ABS_RX","","",null,null],[17,"ABS_RY","","",null,null],[17,"ABS_RZ","","",null,null],[17,"ABS_THROTTLE","","",null,null],[17,"ABS_RUDDER","","",null,null],[17,"ABS_WHEEL","","",null,null],[17,"ABS_GAS","","",null,null],[17,"ABS_BRAKE","","",null,null],[17,"ABS_HAT0X","","",null,null],[17,"ABS_HAT0Y","","",null,null],[17,"ABS_HAT1X","","",null,null],[17,"ABS_HAT1Y","","",null,null],[17,"ABS_HAT2X","","",null,null],[17,"ABS_HAT2Y","","",null,null],[17,"ABS_HAT3X","","",null,null],[17,"ABS_HAT3Y","","",null,null],[17,"ABS_PRESSURE","","",null,null],[17,"ABS_DISTANCE","","",null,null],[17,"ABS_TILT_X","","",null,null],[17,"ABS_TILT_Y","","",null,null],[17,"ABS_TOOL_WIDTH","","",null,null],[17,"ABS_VOLUME","","",null,null],[17,"ABS_MISC","","",null,null],[17,"ABS_MT_SLOT","","/// \"MT slot being modified\"",null,null],[17,"ABS_MT_TOUCH_MAJOR","","/// \"Major axis of touching ellipse\"",null,null],[17,"ABS_MT_TOUCH_MINOR","","/// \"Minor axis (omit if circular)\"",null,null],[17,"ABS_MT_WIDTH_MAJOR","","/// \"Major axis of approaching ellipse\"",null,null],[17,"ABS_MT_WIDTH_MINOR","","/// \"Minor axis (omit if circular)\"",null,null],[17,"ABS_MT_ORIENTATION","","/// \"Ellipse orientation\"",null,null],[17,"ABS_MT_POSITION_X","","/// \"Center X touch position\"",null,null],[17,"ABS_MT_POSITION_Y","","/// \"Center Y touch position\"",null,null],[17,"ABS_MT_TOOL_TYPE","","/// \"Type of touching device\"",null,null],[17,"ABS_MT_BLOB_ID","","/// \"Group a set of packets as a blob\"",null,null],[17,"ABS_MT_TRACKING_ID","","/// \"Unique ID of the initiated contact\"",null,null],[17,"ABS_MT_PRESSURE","","/// \"Pressure on contact area\"",null,null],[17,"ABS_MT_DISTANCE","","/// \"Contact over distance\"",null,null],[17,"ABS_MT_TOOL_X","","/// \"Center X tool position\"",null,null],[17,"ABS_MT_TOOL_Y","","/// \"Center Y tool position\"",null,null],[17,"ABS_MAX","","",null,null],[17,"SW_LID","","/// \"set = lid shut\"",null,null],[17,"SW_TABLET_MODE","","/// \"set = tablet mode\"",null,null],[17,"SW_HEADPHONE_INSERT","","/// \"set = inserted\"",null,null],[17,"SW_RFKILL_ALL","","/// \"rfkill master switch, type 'any'\"",null,null],[17,"SW_MICROPHONE_INSERT","","/// \"set = inserted\"",null,null],[17,"SW_DOCK","","/// \"set = plugged into doc\"",null,null],[17,"SW_LINEOUT_INSERT","","/// \"set = inserted\"",null,null],[17,"SW_JACK_PHYSICAL_INSERT","","/// \"set = mechanical switch set\"",null,null],[17,"SW_VIDEOOUT_INSERT","","/// \"set  = inserted\"",null,null],[17,"SW_CAMERA_LENS_COVER","","/// \"set = lens covered\"",null,null],[17,"SW_KEYPAD_SLIDE","","/// \"set = keypad slide out\"",null,null],[17,"SW_FRONT_PROXIMITY","","/// \"set = front proximity sensor active\"",null,null],[17,"SW_ROTATE_LOCK","","/// \"set = rotate locked/disabled\"",null,null],[17,"SW_LINEIN_INSERT","","/// \"set = inserted\"",null,null],[17,"SW_MUTE_DEVICE","","/// \"set = device disabled\"",null,null],[17,"SW_MAX","","",null,null],[17,"LED_NUML","","",null,null],[17,"LED_CAPSL","","",null,null],[17,"LED_SCROLLL","","",null,null],[17,"LED_KANA","","",null,null],[17,"LED_SLEEP","","/// \"Stand-by\"",null,null],[17,"LED_SUSPEND","","",null,null],[17,"LED_MUTE","","",null,null],[17,"LED_MISC","","/// \"Generic indicator\"",null,null],[17,"LED_MAIL","","/// \"Message waiting\"",null,null],[17,"LED_CHARGING","","/// \"External power connected\"",null,null],[17,"LED_MAX","","",null,null],[17,"MSC_SERIAL","","/// Serial number, only exported for tablets (\"Transducer Serial Number\")",null,null],[17,"MSC_PULSELED","","/// Only used by the PowerMate driver, right now.",null,null],[17,"MSC_GESTURE","","/// Completely unused.",null,null],[17,"MSC_RAW","","/// \"Raw\" event, rarely used.",null,null],[17,"MSC_SCAN","","/// Key scancode",null,null],[17,"MSC_TIMESTAMP","","/// Completely unused.",null,null],[17,"MSC_MAX","","",null,null],[17,"FF_STATUS_STOPPED","","",null,null],[17,"FF_STATUS_PLAYING","","",null,null],[17,"REP_DELAY","","",null,null],[17,"REP_PERIOD","","",null,null],[17,"SND_CLICK","","",null,null],[17,"SND_BELL","","",null,null],[17,"SND_TONE","","",null,null],[11,"fmt","","",1,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"error"},{"name":"errno"}],"output":{"name":"error"}}],[11,"clone","libc::types::os::common::posix01","",5,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",6,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",7,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",8,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","libc::types::os::common::bsd43","",9,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","libc::types::os::common::bsd44","",10,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",11,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",13,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",15,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",16,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",17,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",18,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",20,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","libc::types::os::arch::posix01","",21,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",22,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",23,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::types::os::arch::extra","",24,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"hash","evdev","",25,null],[11,"cmp","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"types"}],"output":{"name":"types"}}],[11,"eq","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"types"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",25,{"inputs":[{"name":"types"}],"output":{"name":"types"}}],[11,"all","","Returns the set containing all flags.",25,{"inputs":[{"name":"types"}],"output":{"name":"types"}}],[11,"bits","","Returns the raw value of the flags currently stored.",25,{"inputs":[{"name":"types"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",25,{"inputs":[{"name":"types"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",25,{"inputs":[{"name":"types"},{"name":"u32"}],"output":{"name":"types"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,{"inputs":[{"name":"types"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",25,{"inputs":[{"name":"types"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"types"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"types"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"types"}}],[11,"sub","","Returns the set difference of the two sets of flags.",25,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"types"}}],[11,"not","","Returns the complement of this set of flags.",25,{"inputs":[{"name":"types"}],"output":{"name":"types"}}],[11,"from_iter","","",25,{"inputs":[{"name":"types"},{"name":"t"}],"output":{"name":"types"}}],[11,"hash","","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"props"}],"output":{"name":"props"}}],[11,"eq","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"props"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[{"name":"props"}],"output":{"name":"props"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[{"name":"props"}],"output":{"name":"props"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"props"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"props"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"props"},{"name":"u32"}],"output":{"name":"props"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"props"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"props"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"props"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"props"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"props"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"props"},{"name":"props"}],"output":{"name":"props"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"props"}],"output":{"name":"props"}}],[11,"from_iter","","",26,{"inputs":[{"name":"props"},{"name":"t"}],"output":{"name":"props"}}],[11,"fmt","","",2,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"hash","","",27,null],[11,"cmp","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"eq","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"relativeaxis"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"relativeaxis"},{"name":"u32"}],"output":{"name":"relativeaxis"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"relativeaxis"},{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"relativeaxis"}}],[11,"from_iter","","",27,{"inputs":[{"name":"relativeaxis"},{"name":"t"}],"output":{"name":"relativeaxis"}}],[11,"hash","","",28,null],[11,"cmp","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"eq","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"u64"}],"output":{"name":"absoluteaxis"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"sub","","Returns the set difference of the two sets of flags.",28,{"inputs":[{"name":"absoluteaxis"},{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"not","","Returns the complement of this set of flags.",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"absoluteaxis"}}],[11,"from_iter","","",28,{"inputs":[{"name":"absoluteaxis"},{"name":"t"}],"output":{"name":"absoluteaxis"}}],[11,"hash","","",29,null],[11,"cmp","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"switch"}],"output":{"name":"switch"}}],[11,"eq","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"switch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[{"name":"switch"}],"output":{"name":"switch"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[{"name":"switch"}],"output":{"name":"switch"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,{"inputs":[{"name":"switch"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"switch"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"switch"},{"name":"u32"}],"output":{"name":"switch"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,{"inputs":[{"name":"switch"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",29,{"inputs":[{"name":"switch"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"switch"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"switch"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"switch"}}],[11,"sub","","Returns the set difference of the two sets of flags.",29,{"inputs":[{"name":"switch"},{"name":"switch"}],"output":{"name":"switch"}}],[11,"not","","Returns the complement of this set of flags.",29,{"inputs":[{"name":"switch"}],"output":{"name":"switch"}}],[11,"from_iter","","",29,{"inputs":[{"name":"switch"},{"name":"t"}],"output":{"name":"switch"}}],[11,"hash","","",30,null],[11,"cmp","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"led"}],"output":{"name":"led"}}],[11,"eq","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"led"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[{"name":"led"}],"output":{"name":"led"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[{"name":"led"}],"output":{"name":"led"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,{"inputs":[{"name":"led"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"led"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"led"},{"name":"u32"}],"output":{"name":"led"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,{"inputs":[{"name":"led"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",30,{"inputs":[{"name":"led"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"led"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"led"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"led"}}],[11,"sub","","Returns the set difference of the two sets of flags.",30,{"inputs":[{"name":"led"},{"name":"led"}],"output":{"name":"led"}}],[11,"not","","Returns the complement of this set of flags.",30,{"inputs":[{"name":"led"}],"output":{"name":"led"}}],[11,"from_iter","","",30,{"inputs":[{"name":"led"},{"name":"t"}],"output":{"name":"led"}}],[11,"hash","","",31,null],[11,"cmp","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"misc"}],"output":{"name":"misc"}}],[11,"eq","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"misc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",31,{"inputs":[{"name":"misc"}],"output":{"name":"misc"}}],[11,"all","","Returns the set containing all flags.",31,{"inputs":[{"name":"misc"}],"output":{"name":"misc"}}],[11,"bits","","Returns the raw value of the flags currently stored.",31,{"inputs":[{"name":"misc"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",31,{"inputs":[{"name":"misc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",31,{"inputs":[{"name":"misc"},{"name":"u32"}],"output":{"name":"misc"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",31,{"inputs":[{"name":"misc"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",31,{"inputs":[{"name":"misc"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"misc"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"misc"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"misc"}}],[11,"sub","","Returns the set difference of the two sets of flags.",31,{"inputs":[{"name":"misc"},{"name":"misc"}],"output":{"name":"misc"}}],[11,"not","","Returns the complement of this set of flags.",31,{"inputs":[{"name":"misc"}],"output":{"name":"misc"}}],[11,"from_iter","","",31,{"inputs":[{"name":"misc"},{"name":"t"}],"output":{"name":"misc"}}],[11,"hash","","",32,null],[11,"cmp","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"eq","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"ffstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"all","","Returns the set containing all flags.",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"bits","","Returns the raw value of the flags currently stored.",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",32,{"inputs":[{"name":"ffstatus"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",32,{"inputs":[{"name":"ffstatus"},{"name":"u32"}],"output":{"name":"ffstatus"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"sub","","Returns the set difference of the two sets of flags.",32,{"inputs":[{"name":"ffstatus"},{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"not","","Returns the complement of this set of flags.",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"ffstatus"}}],[11,"from_iter","","",32,{"inputs":[{"name":"ffstatus"},{"name":"t"}],"output":{"name":"ffstatus"}}],[11,"clone","","",3,{"inputs":[{"name":"ffeffect"}],"output":{"name":"ffeffect"}}],[11,"hash","","",33,null],[11,"cmp","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"eq","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"repeat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",33,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"all","","Returns the set containing all flags.",33,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"bits","","Returns the raw value of the flags currently stored.",33,{"inputs":[{"name":"repeat"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",33,{"inputs":[{"name":"repeat"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",33,{"inputs":[{"name":"repeat"},{"name":"u32"}],"output":{"name":"repeat"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",33,{"inputs":[{"name":"repeat"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",33,{"inputs":[{"name":"repeat"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"sub","","Returns the set difference of the two sets of flags.",33,{"inputs":[{"name":"repeat"},{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"not","","Returns the complement of this set of flags.",33,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"from_iter","","",33,{"inputs":[{"name":"repeat"},{"name":"t"}],"output":{"name":"repeat"}}],[11,"hash","","",34,null],[11,"cmp","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"sound"}],"output":{"name":"sound"}}],[11,"eq","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"sound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",34,{"inputs":[{"name":"sound"}],"output":{"name":"sound"}}],[11,"all","","Returns the set containing all flags.",34,{"inputs":[{"name":"sound"}],"output":{"name":"sound"}}],[11,"bits","","Returns the raw value of the flags currently stored.",34,{"inputs":[{"name":"sound"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",34,{"inputs":[{"name":"sound"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",34,{"inputs":[{"name":"sound"},{"name":"u32"}],"output":{"name":"sound"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,{"inputs":[{"name":"sound"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",34,{"inputs":[{"name":"sound"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"sound"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"sound"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"sound"}}],[11,"sub","","Returns the set difference of the two sets of flags.",34,{"inputs":[{"name":"sound"},{"name":"sound"}],"output":{"name":"sound"}}],[11,"not","","Returns the complement of this set of flags.",34,{"inputs":[{"name":"sound"}],"output":{"name":"sound"}}],[11,"from_iter","","",34,{"inputs":[{"name":"sound"},{"name":"t"}],"output":{"name":"sound"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",25,{"inputs":[{"name":"types"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",26,{"inputs":[{"name":"props"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",27,{"inputs":[{"name":"relativeaxis"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",28,{"inputs":[{"name":"absoluteaxis"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",29,{"inputs":[{"name":"switch"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",30,{"inputs":[{"name":"led"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",31,{"inputs":[{"name":"misc"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",32,{"inputs":[{"name":"ffstatus"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",33,{"inputs":[{"name":"repeat"}],"output":{"name":"t"}}],[11,"number","","Given a bitflag with only a single flag set, returns the event code corresponding to that\nevent. If multiple flags are set, the one with the most significant bit wins. In debug\nmode,",34,{"inputs":[{"name":"sound"}],"output":{"name":"t"}}],[11,"fmt","","",4,{"inputs":[{"name":"synchronization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"synchronization"}],"output":{"name":"synchronization"}}],[11,"clone","","",0,{"inputs":[{"name":"devicestate"}],"output":{"name":"devicestate"}}],[11,"fmt","","",35,{"inputs":[{"name":"device"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"device"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",35,{"inputs":[{"name":"device"}],"output":null}],[11,"fd","","",35,{"inputs":[{"name":"device"}],"output":{"name":"rawfd"}}],[11,"events_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"types"}}],[11,"name","","",35,{"inputs":[{"name":"device"}],"output":{"name":"cstring"}}],[11,"physical_path","","",35,{"inputs":[{"name":"device"}],"output":{"name":"option"}}],[11,"unique_name","","",35,{"inputs":[{"name":"device"}],"output":{"name":"option"}}],[11,"input_id","","",35,{"inputs":[{"name":"device"}],"output":{"name":"input_id"}}],[11,"properties","","",35,{"inputs":[{"name":"device"}],"output":{"name":"props"}}],[11,"driver_version","","",35,null],[11,"keys_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"fixedbitset"}}],[11,"relative_axes_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"relativeaxis"}}],[11,"absolute_axes_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"absoluteaxis"}}],[11,"switches_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"switch"}}],[11,"leds_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"led"}}],[11,"misc_properties","","",35,{"inputs":[{"name":"device"}],"output":{"name":"misc"}}],[11,"repeats_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"repeat"}}],[11,"sounds_supported","","",35,{"inputs":[{"name":"device"}],"output":{"name":"sound"}}],[11,"state","","",35,{"inputs":[{"name":"device"}],"output":{"name":"devicestate"}}],[11,"open","","",35,{"inputs":[{"name":"device"},{"name":"asref"}],"output":{"name":"result"}}],[11,"sync_state","","Synchronize the `Device` state with the kernel device state.",35,{"inputs":[{"name":"device"}],"output":{"name":"result"}}],[11,"events_no_sync","","Exposes the raw evdev events without doing synchronization on SYN_DROPPED.",35,{"inputs":[{"name":"device"}],"output":{"name":"result"}}],[11,"events","","Exposes the raw evdev events, doing synchronization on SYN_DROPPED.",35,{"inputs":[{"name":"device"}],"output":{"name":"result"}}],[11,"drop","","",36,{"inputs":[{"name":"rawevents"}],"output":null}],[11,"next","","",36,{"inputs":[{"name":"rawevents"}],"output":{"name":"option"}}]],"paths":[[3,"DeviceState"],[4,"Error"],[4,"Key"],[4,"FFEffect"],[4,"Synchronization"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"],[3,"Types"],[3,"Props"],[3,"RelativeAxis"],[3,"AbsoluteAxis"],[3,"Switch"],[3,"Led"],[3,"Misc"],[3,"FFStatus"],[3,"Repeat"],[3,"Sound"],[3,"Device"],[3,"RawEvents"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",16,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the ratio to the power of an exponent",31,{"inputs":[{"name":"ratio"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"OsRng","","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",30,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",31,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"rand","","",32,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",33,null],[11,"from_seed","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",34,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['ioctl'] = {"items":[[0,"","ioctl","",null,null],[0,"libc","","",null,null],[0,"types","ioctl::libc","",null,null],[0,"common","ioctl::libc::types","",null,null],[0,"c95","ioctl::libc::types::common","",null,null],[11,"clone","libc::types::os::common::posix01","",0,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","libc::types::os::common::bsd43","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","libc::types::os::common::bsd44","",5,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",6,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",8,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",9,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",10,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",11,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",12,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",15,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","libc::types::os::arch::posix01","",16,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",17,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",18,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::types::os::arch::extra","",19,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[4,"c_void","ioctl::libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",20,null],[13,"__variant2","","",20,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","ioctl::libc::types::common","",null,null],[6,"int8_t","ioctl::libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","ioctl::libc::types::common","",null,null],[4,"DIR","ioctl::libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","ioctl::libc::types","",null,null],[0,"common","ioctl::libc::types::os","",null,null],[0,"posix01","ioctl::libc::types::os::common","",null,null],[6,"pthread_t","ioctl::libc::types::os::common::posix01","",null,null],[6,"rlim_t","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",0,null],[12,"gl_pathv","","",0,null],[12,"gl_offs","","",0,null],[12,"__unused1","","",0,null],[12,"__unused2","","",0,null],[12,"__unused3","","",0,null],[12,"__unused4","","",0,null],[12,"__unused5","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[4,"timezone","","",null,null],[6,"sighandler_t","","",null,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[0,"bsd43","ioctl::libc::types::os::common","",null,null],[3,"rusage","ioctl::libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[0,"bsd44","ioctl::libc::types::os::common","",null,null],[6,"socklen_t","ioctl::libc::types::os::common::bsd44","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",5,null],[12,"sa_data","","",5,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",6,null],[12,"__ss_align","","",6,null],[12,"__ss_pad2","","",6,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",7,null],[12,"sin_port","","",7,null],[12,"sin_addr","","",7,null],[12,"sin_zero","","",7,null],[3,"in_addr","","",null,null],[12,"s_addr","","",8,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",9,null],[12,"sin6_port","","",9,null],[12,"sin6_flowinfo","","",9,null],[12,"sin6_addr","","",9,null],[12,"sin6_scope_id","","",9,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",10,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",11,null],[12,"imr_interface","","",11,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",12,null],[12,"ipv6mr_interface","","",12,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",13,null],[12,"ai_family","","",13,null],[12,"ai_socktype","","",13,null],[12,"ai_protocol","","",13,null],[12,"ai_addrlen","","",13,null],[12,"ai_addr","","",13,null],[12,"ai_canonname","","",13,null],[12,"ai_next","","",13,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",15,null],[12,"ifa_name","","",15,null],[12,"ifa_flags","","",15,null],[12,"ifa_addr","","",15,null],[12,"ifa_netmask","","",15,null],[12,"ifa_ifu","","",15,null],[12,"ifa_data","","",15,null],[0,"arch","ioctl::libc::types::os","",null,null],[0,"c95","ioctl::libc::types::os::arch","",null,null],[6,"c_char","ioctl::libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","ioctl::libc::types::os::arch","",null,null],[6,"c_longlong","ioctl::libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","ioctl::libc::types::os::arch","",null,null],[6,"off_t","ioctl::libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","ioctl::libc::types::os::arch","",null,null],[6,"nlink_t","ioctl::libc::types::os::arch::posix01","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",16,null],[12,"st_ino","","",16,null],[12,"st_nlink","","",16,null],[12,"st_mode","","",16,null],[12,"st_uid","","",16,null],[12,"st_gid","","",16,null],[12,"__pad0","","",16,null],[12,"st_rdev","","",16,null],[12,"st_size","","",16,null],[12,"st_blksize","","",16,null],[12,"st_blocks","","",16,null],[12,"st_atime","","",16,null],[12,"st_atime_nsec","","",16,null],[12,"st_mtime","","",16,null],[12,"st_mtime_nsec","","",16,null],[12,"st_ctime","","",16,null],[12,"st_ctime_nsec","","",16,null],[12,"__unused","","",16,null],[3,"utimbuf","","",null,null],[12,"actime","","",17,null],[12,"modtime","","",17,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",18,null],[0,"extra","ioctl::libc::types::os::arch","",null,null],[3,"sockaddr_ll","ioctl::libc::types::os::arch::extra","",null,null],[12,"sll_family","","",19,null],[12,"sll_protocol","","",19,null],[12,"sll_ifindex","","",19,null],[12,"sll_hatype","","",19,null],[12,"sll_pkttype","","",19,null],[12,"sll_halen","","",19,null],[12,"sll_addr","","",19,null],[0,"consts","ioctl::libc","",null,null],[0,"os","ioctl::libc::consts","",null,null],[0,"c95","ioctl::libc::consts::os","",null,null],[17,"EXIT_FAILURE","ioctl::libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","ioctl::libc::consts::os","",null,null],[17,"O_RDONLY","ioctl::libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","ioctl::libc::consts::os","",null,null],[17,"F_DUPFD","ioctl::libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","ioctl::libc::consts::os","",null,null],[17,"MADV_NORMAL","ioctl::libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","ioctl::libc::consts::os","",null,null],[17,"AF_PACKET","ioctl::libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","ioctl::libc::consts::os","",null,null],[17,"_SC_ARG_MAX","ioctl::libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","ioctl::libc","",null,null],[0,"c95","ioctl::libc::funcs","",null,null],[0,"ctype","ioctl::libc::funcs::c95","",null,null],[5,"isalnum","ioctl::libc::funcs::c95::ctype","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isalpha","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"iscntrl","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isdigit","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isgraph","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"islower","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isprint","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"ispunct","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isspace","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isupper","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isxdigit","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"tolower","","",null,{"inputs":[{"name":"i8"}],"output":{"name":"i8"}}],[5,"toupper","","",null,{"inputs":[{"name":"i8"}],"output":{"name":"i8"}}],[0,"stdio","ioctl::libc::funcs::c95","",null,null],[5,"fopen","ioctl::libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","ioctl::libc::funcs::c95","",null,null],[5,"abs","ioctl::libc::funcs::c95::stdlib","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"labs","","",null,{"inputs":[{"name":"i64"}],"output":{"name":"i64"}}],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"srand","","",null,null],[0,"string","ioctl::libc::funcs::c95","",null,null],[5,"strcpy","ioctl::libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","ioctl::libc::funcs","",null,null],[0,"stat_","ioctl::libc::funcs::posix88","",null,null],[5,"chmod","ioctl::libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"i32"}}],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","ioctl::libc::funcs::posix88","",null,null],[5,"popen","ioctl::libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","ioctl::libc::funcs::posix88","",null,null],[5,"open","ioctl::libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[0,"dirent","ioctl::libc::funcs::posix88","",null,null],[5,"opendir","ioctl::libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","ioctl::libc::funcs::posix88","",null,null],[17,"_PC_NAME_MAX","ioctl::libc::funcs::posix88::unistd","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"dup","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"dup2","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"fpathconf","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i64"}}],[5,"getcwd","","",null,null],[5,"getegid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"geteuid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"getgid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"getpid","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"getppid","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"getuid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"getsid","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isatty","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"link","","",null,null],[5,"lseek","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"i32"}],"output":{"name":"i64"}}],[5,"pathconf","","",null,null],[5,"pause","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[5,"setpgid","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"setsid","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"setuid","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[5,"sleep","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"usleep","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i64"}}],[5,"tcgetpgrp","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[0,"signal","ioctl::libc::funcs::posix88","",null,null],[5,"kill","ioctl::libc::funcs::posix88::signal","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[0,"mman","ioctl::libc::funcs::posix88","",null,null],[5,"mlock","ioctl::libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"munlockall","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","ioctl::libc::funcs::posix88","",null,null],[5,"if_nametoindex","ioctl::libc::funcs::posix88::net","",null,null],[0,"posix01","ioctl::libc::funcs","",null,null],[0,"stat_","ioctl::libc::funcs::posix01","",null,null],[5,"lstat","ioctl::libc::funcs::posix01::stat_","",null,null],[0,"unistd","ioctl::libc::funcs::posix01","",null,null],[5,"readlink","ioctl::libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"fdatasync","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,{"inputs":[{"name":"i32"},{"name":"i64"}],"output":{"name":"i32"}}],[0,"signal","ioctl::libc::funcs::posix01","",null,null],[5,"signal","ioctl::libc::funcs::posix01::signal","",null,{"inputs":[{"name":"i32"},{"name":"u64"}],"output":{"name":"u64"}}],[0,"glob","ioctl::libc::funcs::posix01","",null,null],[5,"glob","ioctl::libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","ioctl::libc::funcs::posix01","",null,null],[5,"posix_madvise","ioctl::libc::funcs::posix01::mman","",null,null],[0,"resource","ioctl::libc::funcs::posix01","",null,null],[5,"getrlimit","ioctl::libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","ioctl::libc::funcs","",null,null],[5,"socket","ioctl::libc::funcs::bsd43","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[0,"bsd44","ioctl::libc::funcs","",null,null],[5,"getdtablesize","ioctl::libc::funcs::bsd44","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"ioctl","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"strcspn","ioctl::libc","",null,null],[17,"RAND_MAX","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[6,"intptr_t","","",null,null],[5,"fileno","","",null,null],[17,"EPERM","","",null,null],[5,"strchr","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",6,null],[12,"__ss_align","","",6,null],[12,"__ss_pad2","","",6,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_NONBLOCK","","",null,null],[5,"getrusage","","",null,null],[4,"timezone","","",null,null],[17,"EIO","","",null,null],[5,"isalpha","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"ENOTTY","","",null,null],[5,"ftruncate","","",null,{"inputs":[{"name":"i32"},{"name":"i64"}],"output":{"name":"i32"}}],[17,"O_DSYNC","","",null,null],[6,"clock_t","","",null,null],[17,"ERFKILL","","",null,null],[17,"EMSGSIZE","","",null,null],[5,"freopen","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"STDERR_FILENO","","",null,null],[5,"shutdown","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"RLIMIT_RTPRIO","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"S_IFIFO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"S_IWGRP","","",null,null],[5,"strxfrm","","",null,null],[5,"isupper","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",7,null],[12,"sin_port","","",7,null],[12,"sin_addr","","",7,null],[12,"sin_zero","","",7,null],[5,"getpeername","","",null,null],[17,"EINTR","","",null,null],[17,"ENOPKG","","",null,null],[17,"PROT_NONE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"ENOBUFS","","",null,null],[17,"SHUT_RD","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"SIGPIPE","","",null,null],[5,"send","","",null,null],[5,"strpbrk","","",null,null],[5,"listen","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[6,"sighandler_t","","",null,null],[6,"ptrdiff_t","","",null,null],[17,"ENOTCONN","","",null,null],[5,"strcmp","","",null,null],[17,"ENOLCK","","",null,null],[5,"dup2","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"S_IXUSR","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[5,"link","","",null,null],[17,"TMP_MAX","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",10,null],[5,"chown","","",null,null],[6,"uintmax_t","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"ENOEXEC","","",null,null],[5,"isdigit","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"TCP_KEEPCNT","","",null,null],[17,"ENETUNREACH","","",null,null],[5,"setgid","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"SEEK_SET","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"SO_LINGER","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"EDOTDOT","","",null,null],[5,"creat","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[5,"opendir","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[5,"telldir","","",null,null],[5,"putenv","","",null,null],[17,"ENOMSG","","",null,null],[5,"fstat","","",null,null],[17,"S_IRUSR","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"S_IFDIR","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_IOFBF","","",null,null],[6,"int16_t","","",null,null],[17,"ESTALE","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[5,"msync","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"ENODATA","","",null,null],[6,"nlink_t","","",null,null],[17,"EL2NSYNC","","",null,null],[5,"waitpid","","",null,null],[5,"rename","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"EAGAIN","","",null,null],[17,"EBADE","","",null,null],[6,"c_longlong","","",null,null],[5,"wcslen","","",null,null],[5,"freeifaddrs","","",null,null],[5,"malloc","","",null,null],[17,"AF_UNIX","","",null,null],[5,"utime","","",null,null],[17,"EDQUOT","","",null,null],[5,"mkfifo","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[5,"execve","","",null,null],[17,"EBUSY","","",null,null],[17,"ECHILD","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"SIGFPE","","",null,null],[17,"R_OK","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"S_IWRITE","","",null,null],[6,"in_port_t","","",null,null],[5,"getppid","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"_SC_SAVED_IDS","","",null,null],[17,"TCP_CONGESTION","","",null,null],[5,"geteuid","","",null,{"inputs":[],"output":{"name":"u32"}}],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"F_TEST","","",null,null],[6,"c_schar","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"MADV_WILLNEED","","",null,null],[5,"fsync","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"SIGSEGV","","",null,null],[17,"ENOMEM","","",null,null],[17,"ENOSYS","","",null,null],[17,"F_TLOCK","","",null,null],[5,"symlink","","",null,null],[17,"TCP_NODELAY","","",null,null],[5,"getlogin","","",null,null],[17,"ESRMNT","","",null,null],[5,"connect","","",null,null],[17,"ENETRESET","","",null,null],[17,"S_IEXEC","","",null,null],[17,"EREMCHG","","",null,null],[17,"F_GETFL","","",null,null],[5,"fdopen","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"F_OK","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"ENETDOWN","","",null,null],[5,"isprint","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[5,"execvp","","",null,null],[5,"atoi","","",null,null],[5,"strrchr","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"X_OK","","",null,null],[5,"labs","","",null,{"inputs":[{"name":"i64"}],"output":{"name":"i64"}}],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[5,"unsetenv","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"S_IRWXG","","",null,null],[17,"SHUT_WR","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"EBADF","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[6,"c_long","","",null,null],[5,"fflush","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"TCP_SYNCNT","","",null,null],[5,"sysconf","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i64"}}],[17,"ENOKEY","","",null,null],[17,"EDOM","","",null,null],[17,"EISDIR","","",null,null],[5,"nanosleep","","",null,null],[5,"atof","","",null,null],[17,"O_CREAT","","",null,null],[5,"ttyname","","",null,null],[17,"SO_DONTROUTE","","",null,null],[6,"c_float","","",null,null],[5,"rmdir","","",null,null],[5,"mkdir","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[5,"getsockname","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"S_IFREG","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"O_APPEND","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"F_GETFD","","",null,null],[5,"strstr","","",null,null],[5,"getenv","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"SIGTRAP","","",null,null],[5,"ftell","","",null,null],[5,"chmod","","",null,null],[17,"ENOCSI","","",null,null],[17,"_SC_FSYNC","","",null,null],[5,"mlockall","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"SIG_IGN","","",null,null],[17,"MAP_FIXED","","",null,null],[6,"int32_t","","",null,null],[6,"uint32_t","","",null,null],[17,"FILENAME_MAX","","",null,null],[6,"c_uchar","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[4,"DIR","","",null,null],[6,"c_double","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[6,"int8_t","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[5,"strncmp","","",null,null],[17,"RLIMIT_CORE","","",null,null],[5,"isgraph","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[6,"pthread_t","","",null,null],[5,"readdir_r","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"ENOANO","","",null,null],[17,"EXFULL","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[6,"mode_t","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"ELIBSCN","","",null,null],[17,"EUCLEAN","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"IP_TTL","","",null,null],[17,"ENONET","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[5,"pathconf","","",null,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",18,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[6,"pid_t","","",null,null],[5,"fgets","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTNAM","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"EL2HLT","","",null,null],[5,"srand","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[5,"mmap","","",null,null],[17,"ENOTSOCK","","",null,null],[5,"shm_open","","",null,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"EILSEQ","","",null,null],[5,"execv","","",null,null],[6,"size_t","","",null,null],[5,"remove","","",null,null],[5,"ungetc","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[5,"mlock","","",null,null],[17,"SO_REUSEADDR","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[17,"F_ULOCK","","",null,null],[5,"isatty","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"unlink","","",null,null],[4,"dirent_t","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",0,null],[12,"gl_pathv","","",0,null],[12,"gl_offs","","",0,null],[12,"__unused1","","",0,null],[12,"__unused2","","",0,null],[12,"__unused3","","",0,null],[12,"__unused4","","",0,null],[12,"__unused5","","",0,null],[17,"RLIMIT_AS","","",null,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ERANGE","","",null,null],[17,"F_DUPFD","","",null,null],[17,"SIGINT","","",null,null],[5,"free","","",null,null],[5,"setenv","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"EL3HLT","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"BUFSIZ","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[5,"getgroups","","",null,null],[5,"seekdir","","",null,null],[5,"fputc","","",null,null],[5,"strcoll","","",null,null],[17,"ELOOP","","",null,null],[5,"read","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"EBADR","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",8,null],[17,"MAP_PRIVATE","","",null,null],[17,"ENOTBLK","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[5,"getuid","","",null,{"inputs":[],"output":{"name":"u32"}}],[17,"EIDRM","","",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",17,null],[12,"modtime","","",17,null],[17,"GLOB_NOSORT","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[5,"recvfrom","","",null,null],[17,"IPPROTO_IP","","",null,null],[5,"atexit","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[5,"strncat","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EREMOTE","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",5,null],[12,"sa_data","","",5,null],[5,"chdir","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"SO_SNDBUF","","",null,null],[5,"getpgrp","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"RLIMIT_FSIZE","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"MS_SYNC","","",null,null],[5,"strspn","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"ECANCELED","","",null,null],[5,"close","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"tolower","","",null,{"inputs":[{"name":"i8"}],"output":{"name":"i8"}}],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",15,null],[12,"ifa_name","","",15,null],[12,"ifa_flags","","",15,null],[12,"ifa_addr","","",15,null],[12,"ifa_netmask","","",15,null],[12,"ifa_ifu","","",15,null],[12,"ifa_data","","",15,null],[17,"O_EXCL","","",null,null],[5,"strcat","","",null,null],[17,"EHWPOISON","","",null,null],[17,"S_IROTH","","",null,null],[17,"EBFONT","","",null,null],[17,"MADV_RANDOM","","",null,null],[5,"pause","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"EBADFD","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"S_IWUSR","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"EFBIG","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[5,"shm_unlink","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"EMLINK","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[5,"mprotect","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"ERESTART","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"MAP_FILE","","",null,null],[5,"strlen","","",null,null],[17,"ELIBACC","","",null,null],[17,"SO_DEBUG","","",null,null],[6,"c_int","","",null,null],[5,"sleep","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[17,"EISNAM","","",null,null],[5,"setsockopt","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"AF_INET6","","",null,null],[5,"readlink","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"O_NOCTTY","","",null,null],[6,"dev_t","","",null,null],[5,"iscntrl","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"EOF","","",null,null],[5,"_exit","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[5,"sendto","","",null,null],[5,"closedir","","",null,null],[17,"F_SETFL","","",null,null],[5,"strtok","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"EPIPE","","",null,null],[5,"pclose","","",null,null],[5,"strncpy","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EADV","","",null,null],[17,"S_IRWXO","","",null,null],[17,"O_WRONLY","","",null,null],[4,"FILE","","",null,null],[6,"socklen_t","","",null,null],[17,"S_IFMT","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"AF_PACKET","","",null,null],[6,"sa_family_t","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"_SC_TIMERS","","",null,null],[5,"strcpy","","",null,null],[17,"SIGALRM","","",null,null],[5,"pipe","","",null,null],[5,"munmap","","",null,null],[17,"SO_REUSEPORT","","",null,null],[5,"isalnum","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[6,"c_short","","",null,null],[17,"PROT_READ","","",null,null],[5,"setuid","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"EBADRQC","","",null,null],[5,"toupper","","",null,{"inputs":[{"name":"i8"}],"output":{"name":"i8"}}],[5,"alarm","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[6,"c_char","","",null,null],[17,"IP_HDRINCL","","",null,null],[5,"ferror","","",null,null],[5,"lseek","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"i32"}],"output":{"name":"i64"}}],[17,"SO_TYPE","","",null,null],[5,"fgetc","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[6,"rlim_t","","",null,null],[17,"EISCONN","","",null,null],[5,"strtol","","",null,null],[6,"in_addr_t","","",null,null],[6,"suseconds_t","","",null,null],[5,"write","","",null,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",11,null],[12,"imr_interface","","",11,null],[17,"EBADMSG","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[5,"fgetpos","","",null,null],[5,"fopen","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SIGKILL","","",null,null],[17,"SO_ERROR","","",null,null],[17,"EUNATCH","","",null,null],[17,"S_IFBLK","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"EDEADLK","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"S_IFCHR","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[5,"fclose","","",null,null],[17,"ELIBMAX","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[5,"setbuf","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"ENOSPC","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"S_IRWXU","","",null,null],[17,"ELIBBAD","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[5,"perror","","",null,null],[5,"puts","","",null,null],[6,"wchar_t","","",null,null],[6,"c_ulong","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"SIGQUIT","","",null,null],[17,"TCP_CORK","","",null,null],[5,"memcmp","","",null,null],[5,"tmpfile","","",null,null],[17,"SIGTERM","","",null,null],[17,"EL3RST","","",null,null],[5,"usleep","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"RLIMIT_NPROC","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[5,"pread","","",null,null],[6,"uint64_t","","",null,null],[5,"rewinddir","","",null,null],[17,"SIGILL","","",null,null],[17,"ELNRNG","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[5,"rand","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"dup","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"RLIMIT_NOFILE","","",null,null],[5,"memchr","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"S_IWOTH","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"AF_INET","","",null,null],[17,"ENOSR","","",null,null],[5,"getgid","","",null,{"inputs":[],"output":{"name":"u32"}}],[4,"c_void","","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",20,null],[13,"__variant2","","",20,null],[17,"ECOMM","","",null,null],[17,"E2BIG","","",null,null],[17,"EMFILE","","",null,null],[5,"lstat","","",null,null],[4,"fpos_t","","",null,null],[17,"F_SETFD","","",null,null],[5,"fsetpos","","",null,null],[5,"getsid","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[6,"uintptr_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",16,null],[12,"st_ino","","",16,null],[12,"st_nlink","","",16,null],[12,"st_mode","","",16,null],[12,"st_uid","","",16,null],[12,"st_gid","","",16,null],[12,"__pad0","","",16,null],[12,"st_rdev","","",16,null],[12,"st_size","","",16,null],[12,"st_blksize","","",16,null],[12,"st_blocks","","",16,null],[12,"st_atime","","",16,null],[12,"st_atime_nsec","","",16,null],[12,"st_mtime","","",16,null],[12,"st_mtime_nsec","","",16,null],[12,"st_ctime","","",16,null],[12,"st_ctime_nsec","","",16,null],[12,"__unused","","",16,null],[5,"stat","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EOWNERDEAD","","",null,null],[6,"useconds_t","","",null,null],[17,"ECHRNG","","",null,null],[17,"O_SYNC","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"ECONNABORTED","","",null,null],[5,"getegid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"getcwd","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",19,null],[12,"sll_protocol","","",19,null],[12,"sll_ifindex","","",19,null],[12,"sll_hatype","","",19,null],[12,"sll_pkttype","","",19,null],[12,"sll_halen","","",19,null],[12,"sll_addr","","",19,null],[17,"MADV_REMOVE","","",null,null],[5,"fwrite","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"SEEK_END","","",null,null],[5,"fputs","","",null,null],[5,"fseek","","",null,null],[17,"ENAVAIL","","",null,null],[17,"W_OK","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[5,"isspace","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[6,"int64_t","","",null,null],[17,"MAP_ANON","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[5,"feof","","",null,null],[17,"ENOSTR","","",null,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",12,null],[12,"ipv6mr_interface","","",12,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"EBADSLT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[5,"bind","","",null,null],[17,"EACCES","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SO_BROADCAST","","",null,null],[5,"islower","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"ETIMEDOUT","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"ENOENT","","",null,null],[5,"setpgid","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"ENOLINK","","",null,null],[5,"access","","",null,null],[6,"time_t","","",null,null],[17,"SIGHUP","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"ESPIPE","","",null,null],[17,"TCP_INFO","","",null,null],[5,"getrlimit","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[5,"getopt","","",null,null],[5,"tcgetpgrp","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"socket","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[6,"uint16_t","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[5,"fork","","",null,{"inputs":[],"output":{"name":"i32"}}],[6,"ino_t","","",null,null],[17,"EALREADY","","",null,null],[17,"EROFS","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"ENOTDIR","","",null,null],[5,"setsid","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"ECONNRESET","","",null,null],[17,"EPROTOTYPE","","",null,null],[5,"getpid","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"recv","","",null,null],[17,"S_IREAD","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"EXDEV","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TCP_MD5SIG","","",null,null],[6,"off_t","","",null,null],[17,"EINVAL","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[5,"setvbuf","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"_SC_VERSION","","",null,null],[5,"pwrite","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"S_IRGRP","","",null,null],[6,"blkcnt_t","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"EUSERS","","",null,null],[17,"MAP_STACK","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",13,null],[12,"ai_family","","",13,null],[12,"ai_socktype","","",13,null],[12,"ai_protocol","","",13,null],[12,"ai_addrlen","","",13,null],[12,"ai_addr","","",13,null],[12,"ai_canonname","","",13,null],[12,"ai_next","","",13,null],[17,"RLIMIT_MEMLOCK","","",null,null],[5,"open","","",null,null],[5,"fread","","",null,null],[5,"accept","","",null,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",9,null],[12,"sin6_port","","",9,null],[12,"sin6_flowinfo","","",9,null],[12,"sin6_addr","","",9,null],[12,"sin6_scope_id","","",9,null],[17,"_IONBF","","",null,null],[17,"IPPROTO_RAW","","",null,null],[5,"fchmod","","",null,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"i32"}}],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"EPROTO","","",null,null],[17,"F_LOCK","","",null,null],[17,"O_RDONLY","","",null,null],[5,"rewind","","",null,null],[6,"gid_t","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[5,"strtod","","",null,null],[17,"ENFILE","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[5,"setrlimit","","",null,null],[17,"O_RDWR","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[5,"isxdigit","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"MADV_HWPOISON","","",null,null],[17,"TCP_MAXSEG","","",null,null],[5,"system","","",null,null],[5,"ispunct","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"MS_ASYNC","","",null,null],[6,"intmax_t","","",null,null],[17,"RLIM_INFINITY","","",null,null],[5,"abs","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[6,"c_uint","","",null,null],[5,"realloc","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[5,"if_nametoindex","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"S_IXOTH","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"IPPROTO_TCP","","",null,null],[5,"fpathconf","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i64"}}],[5,"wait","","",null,null],[5,"calloc","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"ESRCH","","",null,null],[6,"c_ushort","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[6,"uid_t","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGABRT","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"GLOB_MARK","","",null,null],[5,"strerror","","",null,null],[5,"strtoul","","",null,null],[5,"fdatasync","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"ENXIO","","",null,null],[6,"blksize_t","","",null,null],[5,"munlockall","","",null,{"inputs":[],"output":{"name":"i32"}}],[6,"ssize_t","","",null,null],[5,"fcntl","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[17,"O_RSYNC","","",null,null],[17,"ETXTBSY","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"S_IXGRP","","",null,null],[17,"_IOLBF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"RUSAGE_SELF","","",null,null],[6,"c_ulonglong","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"ETIME","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"EFAULT","","",null,null],[5,"popen","","",null,null],[17,"EEXIST","","",null,null],[5,"munlock","","",null,null],[5,"getifaddrs","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"MCL_FUTURE","","",null,null],[6,"uint8_t","","",null,null],[17,"EHOSTDOWN","","",null,null],[3,"input_event","ioctl","",null,null],[12,"time","","",21,null],[12,"_type","","",21,null],[12,"code","","",21,null],[12,"value","","",21,null],[3,"input_id","","",null,null],[12,"bustype","","",22,null],[12,"vendor","","",22,null],[12,"product","","",22,null],[12,"version","","",22,null],[3,"ff_effect","","",null,null],[12,"_type","","",23,null],[12,"id","","",23,null],[12,"direction","","",23,null],[12,"trigger","","",23,null],[12,"replay","","",23,null],[12,"u","","",23,null],[3,"Union_Unnamed16","","",null,null],[12,"_bindgen_data_","","",24,null],[3,"input_absinfo","","",null,null],[12,"value","","",25,null],[12,"minimum","","",25,null],[12,"maximum","","",25,null],[12,"fuzz","","",25,null],[12,"flat","","",25,null],[12,"resolution","","",25,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",26,null],[12,"len","","",26,null],[12,"index","","",26,null],[12,"keycode","","",26,null],[12,"scancode","","",26,null],[3,"ff_replay","","",null,null],[12,"length","","",27,null],[12,"delay","","",27,null],[3,"ff_trigger","","",null,null],[12,"button","","",28,null],[12,"interval","","",28,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",29,null],[12,"attack_level","","",29,null],[12,"fade_length","","",29,null],[12,"fade_level","","",29,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",30,null],[12,"envelope","","",30,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",31,null],[12,"end_level","","",31,null],[12,"envelope","","",31,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",32,null],[12,"left_saturation","","",32,null],[12,"right_coeff","","",32,null],[12,"left_coeff","","",32,null],[12,"deadband","","",32,null],[12,"center","","",32,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",33,null],[12,"period","","",33,null],[12,"magnitude","","",33,null],[12,"offset","","",33,null],[12,"phase","","",33,null],[12,"envelope","","",33,null],[12,"custom_len","","",33,null],[12,"custom_data","","",33,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",34,null],[12,"weak_magnitude","","",34,null],[5,"ioc_dir","","Extracts the \"direction\" (read/write/none) from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[5,"ioc_type","","Extracts the type from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"ioc_nr","","Extracts the ioctl number from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"ioc_size","","Extracts the size from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"eviocgname","","",null,null],[5,"eviocgphys","","",null,null],[5,"eviocguniq","","",null,null],[5,"eviocgprop","","",null,null],[5,"eviocgmtslots","","",null,null],[5,"eviocgkey","","",null,null],[5,"eviocgled","","",null,null],[5,"eviocgsnd","","",null,null],[5,"eviocgsw","","",null,null],[5,"eviocsff","","",null,null],[5,"eviocgrab","","",null,null],[5,"eviocrevoke","","",null,null],[5,"eviocsclockid","","",null,null],[5,"eviocgbit","","",null,null],[5,"eviocgabs","","",null,null],[5,"apm_ioc_standby","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"apm_ioc_suspend","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"btrfs_ioc_balance_ctl","","",null,null],[5,"btrfs_ioc_clone","","",null,null],[5,"btrfs_ioc_default_subvol","","",null,null],[5,"btrfs_ioc_get_fslabel","","",null,null],[5,"btrfs_ioc_quota_rescan_wait","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"btrfs_ioc_scrub_cancel","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"btrfs_ioc_set_fslabel","","",null,null],[5,"btrfs_ioc_start_sync","","",null,null],[5,"btrfs_ioc_subvol_getflags","","",null,null],[5,"btrfs_ioc_subvol_setflags","","",null,null],[5,"btrfs_ioc_sync","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"btrfs_ioc_trans_end","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"btrfs_ioc_trans_start","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"btrfs_ioc_wait_sync","","",null,null],[5,"cm_iocardoff","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cm_iocgstatus","","",null,null],[5,"cm_iocsrdr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cxl_ioctl_get_process_element","","",null,null],[5,"drm_ioctl_agp_acquire","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_agp_release","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_drop_master","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_mode_rmfb","","",null,null],[5,"drm_ioctl_radeon_cp_idle","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_radeon_cp_reset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_radeon_cp_resume","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_radeon_cp_start","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_radeon_flip","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_radeon_reset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_radeon_swap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"drm_ioctl_set_master","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"eviocgeffects","","",null,null],[5,"eviocgid","","",null,null],[5,"eviocgkeycode","","",null,null],[5,"eviocgrep","","",null,null],[5,"eviocgversion","","",null,null],[5,"eviocrmff","","",null,null],[5,"eviocskeycode","","",null,null],[5,"eviocsrep","","",null,null],[5,"ext2_ioc_getflags","","",null,null],[5,"ext2_ioc_getversion","","",null,null],[5,"ext2_ioc_getversion_new","","",null,null],[5,"ext2_ioc_group_extend","","",null,null],[5,"ext2_ioc_setflags","","",null,null],[5,"ext2_ioc_setversion","","",null,null],[5,"ext2_ioc_setversion_new","","",null,null],[5,"ext4_ioc_resize_fs","","",null,null],[5,"fat_ioctl_get_attributes","","",null,null],[5,"fat_ioctl_get_volume_id","","",null,null],[5,"fat_ioctl_set_attributes","","",null,null],[5,"fs_ioc32_getflags","","",null,null],[5,"fs_ioc32_getversion","","",null,null],[5,"fs_ioc32_setflags","","",null,null],[5,"fs_ioc32_setversion","","",null,null],[5,"fs_ioc_getflags","","",null,null],[5,"fs_ioc_getversion","","",null,null],[5,"fs_ioc_setflags","","",null,null],[5,"fs_ioc_setversion","","",null,null],[5,"fw_cdev_ioc_get_speed","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"hidiocapplication","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"hidiocgflag","","",null,null],[5,"hidiocgrdescsize","","",null,null],[5,"hidiocgversion","","",null,null],[5,"hidiocinitreport","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"hidiocsflag","","",null,null],[5,"iiocdbgvar","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocdrvctl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocgetcps","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocgetdvr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocgetmap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocgetprf","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocgetset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetaif","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetaln","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetanm","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetasl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetdif","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetdil","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetdln","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetdnm","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetdwrset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetgcf","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetgnm","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetgpn","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnethup","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetlcr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocnetscf","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsetbrj","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsetgst","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsetmap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsetprf","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsetset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsetver","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"iiocsigprf","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"ioctl_wdm_max_command","","",null,null],[5,"ivtv_ioc_passthrough_mode","","",null,null],[5,"jsiocgaxes","","",null,null],[5,"jsiocgaxmap","","",null,null],[5,"jsiocgbuttons","","",null,null],[5,"jsiocgversion","","",null,null],[5,"jsiocsaxmap","","",null,null],[5,"kiocsound","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"meyeioc_qbuf_capt","","",null,null],[5,"meyeioc_stillcapt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"meyeioc_stilljcapt","","",null,null],[5,"meyeioc_sync","","",null,null],[5,"mgsl_iocclrmodcount","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocgif","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocgstats","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocgtxidle","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocgxctrl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocgxsync","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_ioclooptxdone","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocrxenable","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocsif","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocstxidle","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocsxctrl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocsxsync","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_ioctxabort","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_ioctxenable","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"mgsl_iocwaitevent","","",null,null],[5,"nvme_ioctl_id","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"osiocgnetaddr","","",null,null],[5,"osiocsnetaddr","","",null,null],[5,"pciioc_controller","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"pciioc_mmap_is_io","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"pciioc_mmap_is_mem","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"pciioc_write_combine","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"perf_event_ioc_disable","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"perf_event_ioc_enable","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"perf_event_ioc_id","","",null,null],[5,"perf_event_ioc_period","","",null,null],[5,"perf_event_ioc_refresh","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"perf_event_ioc_reset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"perf_event_ioc_set_filter","","",null,null],[5,"perf_event_ioc_set_output","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"pmu_ioc_can_sleep","","",null,null],[5,"pmu_ioc_get_backlight","","",null,null],[5,"pmu_ioc_get_model","","",null,null],[5,"pmu_ioc_grab_backlight","","",null,null],[5,"pmu_ioc_has_adb","","",null,null],[5,"pmu_ioc_set_backlight","","",null,null],[5,"pmu_ioc_sleep","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"pppiocattach","","",null,null],[5,"pppiocattchan","","",null,null],[5,"pppiocbundle","","",null,null],[5,"pppiocconnect","","",null,null],[5,"pppiocdetach","","",null,null],[5,"pppiocdisconn","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"pppiocgasyncmap","","",null,null],[5,"pppiocgchan","","",null,null],[5,"pppiocgcompressors","","",null,null],[5,"pppiocgdebug","","",null,null],[5,"pppiocgflags","","",null,null],[5,"pppiocgifname","","",null,null],[5,"pppiocgmpflags","","",null,null],[5,"pppiocgmru","","",null,null],[5,"pppiocgrasyncmap","","",null,null],[5,"pppiocgunit","","",null,null],[5,"pppiocnewunit","","",null,null],[5,"pppiocsasyncmap","","",null,null],[5,"pppiocscompressor","","",null,null],[5,"pppiocsdebug","","",null,null],[5,"pppiocsflags","","",null,null],[5,"pppiocsmaxcid","","",null,null],[5,"pppiocsmpflags","","",null,null],[5,"pppiocsmpmru","","",null,null],[5,"pppiocsmpmtu","","",null,null],[5,"pppiocsmrru","","",null,null],[5,"pppiocsmru","","",null,null],[5,"pppiocsrasyncmap","","",null,null],[5,"pppiocxferunit","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"reiserfs_ioc_getflags","","",null,null],[5,"reiserfs_ioc_getversion","","",null,null],[5,"resierfs_ioc_setflags","","",null,null],[5,"reiserfs_ioc_setversion","","",null,null],[5,"reiserfs_ioc_unpack","","",null,null],[5,"rfkill_ioctl_noinput","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_benchmark_command","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_doorlock","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_doorunlock","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_get_bus_number","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_get_idlun","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_probe_host","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_send_command","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_start_unit","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_stop_unit","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_sync","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_tagged_disable","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_tagged_enable","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"scsi_ioctl_test_unit_ready","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocadddlci","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocaddmulti","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocaddrt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocaipxitfcrt","","",null,null],[5,"siocaipxprislt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocatalkdifaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocatmark","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25addfwd","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25adduid","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25bpqaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25ctlcon","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25delfwd","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25deluid","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25devctl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25getinfo","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25getinfoold","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25getparms","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25getuid","","",null,null],[5,"siocax25nouid","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25optrt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocax25setparms","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbondchangeactive","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbondenslave","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbondinfoquery","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbondrelease","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbondsethwaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbondslaveinfoquery","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbraddbr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbraddif","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbrdelbr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocbrdelif","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdarp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdeldlci","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdelmulti","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdelrt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdevplip","","",null,null],[5,"siocdevprivate","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdifaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocdrarp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocethtool","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgarp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgbpqethparam","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgcmfirmware","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgcmfrequency","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgcmpids","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgcmstats","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgdebserint","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgdongle","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgetlinkname","","",null,null],[5,"siocghwtstamp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifbr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifbrdaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifconf","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifcount","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifdstaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifencap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifflags","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifhwaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifindex","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifmap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifmem","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifmetric","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifmtu","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifname","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifnetmask","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifpflags","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifslave","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgiftxqlen","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgifvlan","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgkeepalive","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgkeepperiod","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocglease","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgmediabusy","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgmiiphy","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgmiireg","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgmode","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgoutfill","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgpgrp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgpppcstats","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgpppstats","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgpppver","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgqos","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgrarp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgreceiving","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgstamp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocgstampns","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocinq","","",null,null],[5,"siocipxcfgdata","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocipxncpconn","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocmkclip","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocnrctlcon","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocnrdecobs","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocnrgetparms","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocnrrtctl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocnrsetparms","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocoutq","","",null,null],[5,"siocoutqnsd","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocparm_mask","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocprotoprivate","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsaccept","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsclrrt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsgcause","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsgfacilities","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsgl2call","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsl2call","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrsscause","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrssl2call","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocrtmsg","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsarp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsbandwidth","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsbpqethaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsbpqethopt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsbpqethparam","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocscmfrequency","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocscmpids","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsdebserint","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsdongle","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsdtrrts","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocshwtstamp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifatmtcp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifbr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifbrdaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifdstaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifencap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifflags","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifhwaddr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifhwbroadcast","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsiflink","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifmap","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifmem","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifmetric","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifmtu","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifname","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifnetmask","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifpflags","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifslave","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsiftxqlen","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsifvlan","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocskeepalive","","",null,null],[5,"siocskeepperiod","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocslease","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsmediabusy","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsmiireg","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsmode","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsoutfill","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocspgrp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocsrarp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocwandev","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25callaccptapprv","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25gcalluserdata","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25gcausediag","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25gdtefacilities","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25gfacilities","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25gsubscrip","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25scalluserdata","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25scausediag","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25scudmatchlen","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25sdtefacilities","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25sendcallaccpt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25sfacilities","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"siocx25ssubscrip","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_ioctl_clear_patches","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_ioctl_reset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_ioctl_set_connection","","",null,null],[5,"sndrv_dm_fm_ioctl_set_mode","","",null,null],[5,"sndrv_dm_fm_oss_ioctl_play_note","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_oss_ioctl_reset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_oss_ioctl_set_mode","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_oss_ioctl_set_opl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_oss_ioctl_set_params","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_dm_fm_oss_ioctl_set_voice","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_emu10k1_ioctl_continue","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_emu10k1_ioctl_dbg_read","","",null,null],[5,"sndrv_emu10k1_ioctl_pversion","","",null,null],[5,"sndrv_emu10k1_ioctl_single_step","","",null,null],[5,"sndrv_emu10k1_ioctl_stop","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_emu10k1_ioctl_tram_setup","","",null,null],[5,"sndrv_emu10k1_ioctl_zero_tram_counter","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_firewire_ioctl_lock","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_firewire_ioctl_unlock","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_sb_csp_ioctl_pause","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_sb_csp_ioctl_restart","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_sb_csp_ioctl_stop","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sndrv_sb_csp_ioctl_unload_code","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"sonypi_iocgbat1cap","","",null,null],[5,"sonypi_iocgbat1rem","","",null,null],[5,"sonypi_iocgbat2cap","","",null,null],[5,"sonypi_iocgbat2rem","","",null,null],[5,"sonypi_iocgbatflags","","",null,null],[5,"sonypi_iocgblue","","",null,null],[5,"sonypi_iocgbrt","","",null,null],[5,"sonypi_iocgfan","","",null,null],[5,"sonypi_iocgtemp","","",null,null],[5,"sonypi_iocsblue","","",null,null],[5,"sonypi_iocsbrt","","",null,null],[5,"sonypi_iocsfan","","",null,null],[5,"spiocstype","","",null,null],[5,"spi_ioc_rd_bits_per_word","","",null,null],[5,"spi_ioc_rd_lsb_first","","",null,null],[5,"spi_ioc_rd_max_speed_hz","","",null,null],[5,"spi_ioc_rd_mode","","",null,null],[5,"spi_ioc_rd_mode32","","",null,null],[5,"spi_ioc_wr_bits_per_word","","",null,null],[5,"spi_ioc_wr_lsb_first","","",null,null],[5,"spi_ioc_wr_max_speed_hz","","",null,null],[5,"spi_ioc_wr_mode","","",null,null],[5,"spi_ioc_wr_mode32","","",null,null],[5,"sys_f_ioctlsocket","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tioccbrk","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tioccons","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocexcl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgdev","","",null,null],[5,"tiocgetd","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgexcl","","",null,null],[5,"tiocgicount","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocglcktrmios","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgpgrp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgpkt","","",null,null],[5,"tiocgptlck","","",null,null],[5,"tiocgptn","","",null,null],[5,"tiocgrs485","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgserial","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgsid","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgsoftcar","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocgwinsz","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocinq","","",null,null],[5,"tioclinux","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_blankedscreen","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_blankscreen","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_getfgconsole","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_getkmsgredirect","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_getmousereporting","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_getshiftstate","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_pastesel","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_scrollconsole","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selbuttonmask","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selchar","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selclear","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selline","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selloadlut","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selmousereport","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selpointer","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_selword","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_setkmsgredirect","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_setsel","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_setvesablank","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocl_unblankscreen","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocmbic","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocmbis","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocmget","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocmiwait","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocmset","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_car","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_cd","","",null,null],[5,"tiocm_cts","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_dsr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_dtr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_le","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_loop","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_out1","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_out2","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_ri","","",null,null],[5,"tiocm_rng","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_rts","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_sr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocm_st","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocnotty","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocnxcl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocoutq","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_data","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_dostop","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_flushread","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_flushwrite","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_ioctl","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_nostop","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_start","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocpkt_stop","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsbrk","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsctty","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocserconfig","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsergetlsr","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsergetmulti","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsergstruct","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsergwild","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsersetmulti","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocserswild","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocser_temt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsetd","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsig","","",null,null],[5,"tiocslcktrmios","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocspgrp","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsptlck","","",null,null],[5,"tiocsrs485","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsserial","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocssoftcar","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocsti","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocswinsz","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"tiocvhangup","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"ubi_iocdet","","",null,null],[5,"ubi_iocebch","","",null,null],[5,"ubi_ioceber","","",null,null],[5,"ubi_iocebismap","","",null,null],[5,"ubi_iocebunmap","","",null,null],[5,"ubi_iocrmvol","","",null,null],[5,"ubi_iocvolrmblk","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"ubi_iocvolup","","",null,null],[5,"usbtmc_ioctl_abort_bulk_in","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"usbtmc_ioctl_abort_bulk_out","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"usbtmc_ioctl_clear","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"usbtmc_ioctl_clear_in_halt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"usbtmc_ioctl_clear_out_halt","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"usbtmc_ioctl_indicator_pulse","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"vidioc_g_input","","",null,null],[5,"vidioc_g_output","","",null,null],[5,"vidioc_g_priority","","",null,null],[5,"vidioc_log_status","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"vidioc_omap3isp_stat_en","","",null,null],[5,"vidioc_overlay","","",null,null],[5,"vidioc_reserved","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"vidioc_streamoff","","",null,null],[5,"vidioc_streamon","","",null,null],[5,"vidioc_s_input","","",null,null],[5,"vidioc_s_output","","",null,null],[5,"vidioc_s_priority","","",null,null],[5,"wdioc_getbootstatus","","",null,null],[5,"wdioc_getpretimeout","","",null,null],[5,"wdioc_getstatus","","",null,null],[5,"wdioc_gettemp","","",null,null],[5,"wdioc_gettimeleft","","",null,null],[5,"wdioc_gettimeout","","",null,null],[5,"wdioc_keepalive","","",null,null],[5,"wdioc_setoptions","","",null,null],[5,"wdioc_setpretimeout","","",null,null],[5,"wdioc_settimeout","","",null,null],[5,"x86_ioc_rdmsr_regs","","",null,null],[5,"x86_ioc_wrmsr_regs","","",null,null],[5,"xfs_ioc_freeze","","",null,null],[5,"xfs_ioc_getversion","","",null,null],[5,"xfs_ioc_getxflags","","",null,null],[5,"xfs_ioc_goingdown","","",null,null],[5,"xfs_ioc_setxflags","","",null,null],[5,"xfs_ioc_thaw","","",null,null],[5,"fioclex","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cz_nboards","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cz_boot_start","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cz_boot_data","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cz_boot_end","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"cz_test","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[11,"clone","","",21,{"inputs":[{"name":"input_event"}],"output":{"name":"input_event"}}],[11,"default","","",21,{"inputs":[{"name":"input_event"}],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"input_event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"input_id"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"input_id"}],"output":{"name":"input_id"}}],[11,"clone","","",23,{"inputs":[{"name":"ff_effect"}],"output":{"name":"ff_effect"}}],[11,"clone","","",24,{"inputs":[{"name":"union_unnamed16"}],"output":{"name":"union_unnamed16"}}],[11,"constant","","",24,null],[11,"ramp","","",24,null],[11,"periodic","","",24,null],[11,"condition","","",24,null],[11,"rumble","","",24,null],[11,"default","","",24,{"inputs":[{"name":"union_unnamed16"}],"output":{"name":"self"}}],[11,"hash","","",25,null],[11,"partial_cmp","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"bool"}}],[11,"eq","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"input_absinfo"}],"output":{"name":"ordering"}}],[11,"fmt","","",25,{"inputs":[{"name":"input_absinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"input_absinfo"}],"output":{"name":"input_absinfo"}}],[11,"default","","",25,{"inputs":[{"name":"input_absinfo"}],"output":{"name":"self"}}],[11,"fmt","","",26,{"inputs":[{"name":"input_keymap_entry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"input_keymap_entry"}],"output":{"name":"input_keymap_entry"}}],[11,"default","","",26,{"inputs":[{"name":"input_keymap_entry"}],"output":{"name":"self"}}],[11,"fmt","","",27,{"inputs":[{"name":"ff_replay"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"ff_replay"}],"output":{"name":"ff_replay"}}],[11,"default","","",27,{"inputs":[{"name":"ff_replay"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"ff_trigger"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"ff_trigger"}],"output":{"name":"ff_trigger"}}],[11,"default","","",28,{"inputs":[{"name":"ff_trigger"}],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"ff_envelope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"ff_envelope"}],"output":{"name":"ff_envelope"}}],[11,"default","","",29,{"inputs":[{"name":"ff_envelope"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"ff_constant_effect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"ff_constant_effect"}],"output":{"name":"ff_constant_effect"}}],[11,"default","","",30,{"inputs":[{"name":"ff_constant_effect"}],"output":{"name":"self"}}],[11,"fmt","","",31,{"inputs":[{"name":"ff_ramp_effect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"ff_ramp_effect"}],"output":{"name":"ff_ramp_effect"}}],[11,"default","","",31,{"inputs":[{"name":"ff_ramp_effect"}],"output":{"name":"self"}}],[11,"fmt","","",32,{"inputs":[{"name":"ff_condition_effect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"ff_condition_effect"}],"output":{"name":"ff_condition_effect"}}],[11,"default","","",32,{"inputs":[{"name":"ff_condition_effect"}],"output":{"name":"self"}}],[11,"fmt","","",33,{"inputs":[{"name":"ff_periodic_effect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"ff_periodic_effect"}],"output":{"name":"ff_periodic_effect"}}],[11,"default","","",33,{"inputs":[{"name":"ff_periodic_effect"}],"output":{"name":"self"}}],[11,"fmt","","",34,{"inputs":[{"name":"ff_rumble_effect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"ff_rumble_effect"}],"output":{"name":"ff_rumble_effect"}}],[11,"default","","",34,{"inputs":[{"name":"ff_rumble_effect"}],"output":{"name":"self"}}],[14,"ioc!","","Encode an ioctl command.",null,null],[14,"io!","","Encode an ioctl command that has no associated data.",null,null],[14,"ior!","","Encode an ioctl command that reads.",null,null],[14,"iow!","","Encode an ioctl command that writes.",null,null],[14,"iorw!","","Encode an ioctl command that both reads and writes.",null,null],[14,"ioctl!","","Declare a wrapper function around an ioctl.",null,null]],"paths":[[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"],[4,"c_void"],[3,"input_event"],[3,"input_id"],[3,"ff_effect"],[3,"Union_Unnamed16"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"]]};
searchIndex['errno'] = {"items":[[0,"","errno","Cross-platform interface to the `errno` variable.",null,null],[3,"Errno","","Wraps a platform-specific error code.",null,null],[5,"errno","","Returns the platform-specific value of `errno`.",null,{"inputs":[],"output":{"name":"errno"}}],[5,"set_errno","","Sets the platform-specific value of `errno`.",null,{"inputs":[{"name":"errno"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"errno"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"ordering"}}],[11,"clone","","",0,{"inputs":[{"name":"errno"}],"output":{"name":"errno"}}],[11,"fmt","","",0,{"inputs":[{"name":"errno"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Errno"]]};
searchIndex['fixedbitset'] = {"items":[[0,"","fixedbitset","**FixedBitSet** is a simple fixed size set of bits.",null,null],[3,"FixedBitSet","","**FixedBitSet** is a simple fixed size set of bits that can\nbe enabled (1 / **true**) or disabled (0 / **false**).",null,null],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with_capacity","","Create a new **FixedBitSet** with a specific number of bits,\nall initially clear.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":{"name":"self"}}],[11,"len","","Return the length of the **FixedBitSet** in bits.",0,{"inputs":[{"name":"fixedbitset"}],"output":{"name":"usize"}}],[11,"contains","","Return **true** if the bit is enabled in the **FixedBitSet**,\n**false** otherwise.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"clear","","Clear all bits.",0,{"inputs":[{"name":"fixedbitset"}],"output":null}],[11,"insert","","**Panics** if **bit** is out of bounds.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":null}],[11,"set","","**Panics** if **bit** is out of bounds.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"},{"name":"bool"}],"output":null}],[11,"as_slice","","View the bitset as a slice of `u32` blocks",0,null],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\nwill cause `contains` to return potentially incorrect results for bits past the bitlength.",0,null],[11,"clone","","",0,{"inputs":[{"name":"fixedbitset"}],"output":{"name":"self"}}],[11,"index","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":{"name":"bool"}}]],"paths":[[3,"FixedBitSet"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
